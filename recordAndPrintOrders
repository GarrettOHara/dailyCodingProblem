import java.util.*;
public class dailyCoding16
{
	private static ArrayList<Integer> log = new ArrayList<Integer>();
	/**
	 * The main method is not needed for the solution
	 * instead it generates an example of how the 
	 * solution works.
	 */
	public static void main (String args[])
	{
		for (int i = 0; i <= 20; i++)
		{
			record(i);
		}
		for (int i = 0; i < log.size(); i++)
		{
			System.out.print(log.get(i));
			if (i != log.size()-1)
				System.out.print(", ");
		}
		System.out.println();
		getLast(5);
	}
	public static void record(int orderID)
	{
		log.add(orderID);
	}
	public static void getLast(int i)
	{
		System.out.print("[");
		for(int j = log.size() - i; j < log.size(); j++)
		{
			System.out.print(log.get(j));
			if (j != log.size()-1)
				System.out.print(", ");
		}
		System.out.println("]");
	}
	/**
	 * This problem was asked by Twitter.

You run an e-commerce website and want to record the last N order ids 
in a log. Implement a data structure to accomplish this, with the 
following API:

record(order_id): adds the order_id to the log
get_last(i): gets the ith last element from the log. i is guaranteed
to be smaller than or equal to N.

You should be as efficient with time and space as possible.
	 */
}
